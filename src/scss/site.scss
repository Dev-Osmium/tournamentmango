@mixin all-widths($width) {
  min-width: $width;
  max-width: $width;
  width: $width;
}

@mixin all-heights($height) {
  min-height: $height;
  max-height: $height;
  height: $height;
}

.max-width-1200 {
  max-width: 1200px;
  margin: auto;
}

$duel-bg: #eee;
$card-border: 1px solid #eee;

$round-column-width: 340px;
$match-column-width: 130px;

$player-not-ready: #c76e06;

.max-width {
  @include all-widths(100%);
}

.max-height {
  @include all-heights(100%);
}

.overflow-auto {
  overflow: auto;
}

.hidden {
  visibility: hidden;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.almost-max-height {
  height: 85%;
}

.subhead {
  font-size: 14px;
  font-weight: 500;
}

station {
  .station {
    font-size: 13px;

    &.unentered:not(.clickable) {
      display: none;
    }
  }

  input {
    width: 100%;
  }
}

.navigation md-list-item .md-no-style {

  transition: none!important;

  &:hover {
    background-color: #e0e0e0!important;
  }
}

.header-bar {
  @include all-heights(54px);

  .md-title {
    margin-top: 10px;
  }
}

.spin {
  animation: spin 2s infinite linear;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(359deg);
  }
}

.match-column-container {
  @include all-heights(24px);
  background-color: #fff;
  width: 100%;
}

.match-area {
  position: absolute;
  padding-top: 20px;
}

.pull-right { float: right; }
.pull-left { float: left; }

.pointer {
  cursor: pointer;
}

.auto-vert-margin {
  margin-top: auto;
  margin-bottom: auto;
}

.hide-underline a {
  text-decoration: none;
}

.upcoming-match {

  &:not(.small) {
    @include all-widths(600px);

    .player-container {
      border-left: $card-border;
    }
  }

  &.small {
    width: 100%;

    .round-station-container {
      border-bottom: $card-border;
    }

    .match-id {
      text-align: right;
    }

    .player {
      text-align: center;
    }
  }

  .station {
    border-left: $card-border;
    .indeterminate {
      font-style: italic;
    }
  }

  .player-container {
    .player {
      .indeterminate {
        font-style: italic;
        color: $player-not-ready
      }
    }
  }
}

.duel-area {
  background-color: $duel-bg;

  .round-header {
    position: fixed;
    @include all-widths($round-column-width);
    z-index: 11;
    text-align: center;
    background-color: #fff;
  }

  .match-column {
    @include all-widths($round-column-width);

    .match {
      min-height: 57px;

      &.unplayable {
        color: $player-not-ready;
      }

      &.complete {
        color: gray;
      }

      &.walkover {
        .confirm-score, .scores {
          visibility: hidden;
        }
      }

      .match-data {
        align-items: stretch;

        .round-type {
          @include all-widths(70px);
          text-align: center;
        }

        .match-name {
          @include all-widths($match-column-width);

          .member {
            @include all-widths($match-column-width);
            overflow: hidden;
            white-space: nowrap;
            text-align: center;
            text-overflow: ellipsis;

            border-left: $card-border;

            &[hover-name=""] {
              font-style: italic;
            }

            &:not(:last-child) {
              border-bottom: $card-border;
            }
          }
        }

        .confirm-score {

          ng-md-icon[icon="check_circle"] {
            cursor: pointer;
          }

          @include all-widths(24px);
        }

        .scores {
          .score-container {
            width: 25px;
            border-right: $card-border;
            border-left: $card-border;

            &:not(:last-child) {
              border-bottom: $card-border;
            }

            .score-input {
              width: 25px;
              font-size: 12px;
              margin: 0;
              padding: 0;
            }
          }
        }
      }
    }
  }
}

.duel-area.big-scores {

  .round-header {
    @include all-widths($round-column-width * 1.5);
  }

  .match-column {
    @include all-widths($round-column-width * 1.5);

    .match {
      .match-name {
        @include all-widths($match-column-width);

        .member {
          @include all-widths($match-column-width);
        }
      }

      .scores {
        .score-container {
          @include all-widths($match-column-width);
          .score-input {
            @include all-widths($match-column-width);
          }
        }
      }
    }
  }
}

input.hide-spinner[type="number"] {
  -moz-appearance: textfield;

  &::-webkit-outer-spin-button, &::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
}

.player-bucket-list-container {

  .md-subheader-wrapper {
    .md-subheader-inner {
      padding: 0;
    }
  }

  .player-bucket-list {
    padding-top: 0;

    .highlight:not(.sv-helper) {
      //md-list-item:not(.sv-helper):not(.sv-candidate):nth-child(4n),
      //md-list-item:not(.sv-helper):not(.sv-candidate):nth-child(4n+1) {
      background-color: #ccc;
    }

    .md-subheader.no-padding {
      margin-right: 0;

      .md-subheader-inner {
        padding: 0;
      }
    }
  }
}

.header-img {
  transform: translate(0, 5px);
}

md-menu ng-md-icon:not(.no-transform) svg, md-menu-item ng-md-icon:not(.no-transform) svg {
  transform: translate3d(-10%, 35%, 0);
  line-height: 1;
}

td[md-table-cell].empty:before {
  content: 'None';
  color: #aaa;
  font-style: italic;
}

md-data-table-toolbar > form {
  margin-left: 16px;
  margin-top: 25px;
}

md-data-table-toolbar > form > input {
  width: 100%;
  margin: 0;
  border: none;
  color: rgba(0, 0, 0, 0.87);
}
md-data-table-toolbar > form > input:focus {
  outline: none;
}

.abs-position-bottom-right {
  position: fixed;
  right: 10px;
  bottom: 10px;
  z-index: 12;
}

.color-facebook {
  background-color: #3b5998!important;
  color: #fff!important;
}

.color-google {
  background-color: #dc4e41!important;
  color: #fff!important;
}

.color-twitter {
  background-color: #55acee!important;
  color: #fff!important;
}

.ng-inline-edit__input {
  font-weight: 500;
  border-bottom: 1px dashed #000;
}

.description-popup {
  min-width: 400px;
}


$paddings: top bottom left right;

@for $size from 0 to 11 {
  .padding-#{$size*5} { padding: #{$size*5}px }
  .margin-#{$size*5} { margin: #{$size*5}px }
  @each $padding in $paddings {
    .padding-#{$padding}-#{$size*5} { padding-#{$padding}: #{$size*5}px }
    .margin-#{$padding}-#{$size*5} { margin-#{$padding}: #{$size*5}px }
  }
}
